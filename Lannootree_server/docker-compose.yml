version: "3"
services:
  mqtt:
    image: eclipse-mosquitto
    restart: always
    user: "1001:1001"
    volumes:
      - ./mqtt/config:/mosquitto/config
    ports:
      - 1883:1883
      - 8883:8883

  certificate-api:
    image: "nginx:alpine"
    restart: always
    volumes:
      - "./mqtt/config/ca_certificates/ca.crt:/usr/share/nginx/html/ca.crt:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.certificate-api.rule=Host(`lannootree.devbitapp.be`) && PathPrefix(`/ca.crt`)'
      - 'traefik.http.routers.certificate-api.priority=100'
      - 'traefik.http.routers.certificate-api.entrypoints=websecure'
      - 'traefik.http.routers.certificate-api.tls.certresolver=production'

  traefik:
    image: "traefik:v2.9"
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "3100:8080"
    volumes:
      - "./traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik-dashboard.rule=Host(`traefik.lannootree.devbitapp.be`)'
      - 'traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080'
      - 'traefik.http.routers.traefik-dashboard.entrypoints=websecure'
      - 'traefik.http.routers.traefik-dashboard.tls.certresolver=production'
      - 'traefik.http.routers.traefik-dashboard.middlewares=authelia@docker'

  authelia:
    image: authelia/authelia
    restart: always
    user: "1001:1001"
    volumes:
      - ./authelia/config:/config
    environment:
      TZ: "Europe/Brussels"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`auth.lannootree.devbitapp.be`)'
      - 'traefik.http.services.authelia.loadbalancer.server.port=9091'
      - 'traefik.http.routers.authelia.entryPoints=websecure'
      - 'traefik.http.routers.authelia.tls.certresolver=production'
      - 'traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/verify?rd=https%3A%2F%2Fauth.lannootree.devbitapp.be%2F'
      - 'traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'

  whoami:
    image: "traefik/whoami"
    restart: always
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`whoami.lannootree.devbitapp.be`) || (Host(`lannootree.devbitapp.be`) && PathPrefix(`/whoami`))'
      - 'traefik.http.routers.whoami.entrypoints=websecure'
      - 'traefik.http.routers.whoami.tls.certresolver=production'
      - 'traefik.http.routers.whoami.middlewares=authelia@docker'

  frontend:
    build:
      context: ./frontend
      args:
          VITE_LOGOUT_URL: ${VITE_LOGOUT_URL}
          VITE_FRONTEND_WEBSOCKET: ${VITE_FRONTEND_WEBSOCKET}
    restart: always
    env_file:
      - .env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`lannootree.devbitapp.be`)'
      - 'traefik.http.routers.frontend.priority=1'
      - 'traefik.http.routers.frontend.entrypoints=websecure'
      - 'traefik.http.routers.frontend.tls.certresolver=production'
      - 'traefik.http.routers.frontend.middlewares=authelia@docker'

  client-api:
    build:
      context: ./client-api
    restart: always
    volumes:
      - "./mqtt/config/ca_certificates/ca.crt:/app/ca.crt:ro"
    env_file:
      - .env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client-api.rule=Host(`lannootree.devbitapp.be`) && PathPrefix(`/wss`)'
      - "traefik.http.routers.client-api.middlewares=client-api-stripprefix"
      - "traefik.http.middlewares.client-api-stripprefix.stripprefix.prefixes=/wss"
      - 'traefik.http.routers.client-api.priority=100'
      - 'traefik.http.services.client-api.loadbalancer.server.port=3001'
      - 'traefik.http.routers.client-api.entrypoints=websecure'
      - 'traefik.http.routers.client-api.tls.certresolver=production'
      # - 'traefik.http.routers.client-api.middlewares=authelia@docker'

  admin-api:
    build:
      context: ./admin-api
    restart: always
    volumes:
      - "./mqtt/config/ca_certificates/ca.crt:/app/ca.crt:ro"    
      - "log-database:/app/db"
    env_file:
      - .env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.admin-api.rule=Host(`lannootree.devbitapp.be`) && PathPrefix(`/admin/wss`)'
      - "traefik.http.routers.admin-api.middlewares=admin-api-stripprefix"
      - "traefik.http.middlewares.admin-api-stripprefix.stripprefix.prefixes=/admin/wss"
      - 'traefik.http.routers.admin-api.priority=100'
      - 'traefik.http.services.admin-api.loadbalancer.server.port=3000'
      - 'traefik.http.routers.admin-api.entrypoints=websecure'
      - 'traefik.http.routers.admin-api.tls.certresolver=production'
      # - 'traefik.http.routers.admin-api.middlewares=authelia@docker'

  controller:
    build:
      context: ./controller 
    env_file:
      - .env
    environment:
      - PRODUCTION_SERVER=true
    restart: always
    volumes:
      - ./config.json:/config.json
      - "./mqtt/config/ca_certificates/ca.crt:/app/ca.crt:ro"

  githook:
    restart: unless-stopped    
    build:
      context: ./githook/docker-webhook     
    env_file:
      - ./githook/githook.env
    volumes:
        - ./githook/scripts:/code/hooks
        - /var/run/docker.sock:/var/run/docker.sock
    environment:
        # - WEBHOOK_SECRET=${WEBHOOK_SECRET}
        - WEBHOOK_HOOKS_DIR=/code/hooks
        - WEBHOOK_BRANCH_LIST=main  
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.githook.rule=Host(`githook.lannootree.devbitapp.be`)'
      - 'traefik.http.services.githook.loadbalancer.server.port=8000'
      - 'traefik.http.routers.githook.entrypoints=websecure'
      - 'traefik.http.routers.githook.tls.certresolver=production'

volumes:
  log-database:
