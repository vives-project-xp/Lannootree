version: "3"
services:
  mqtt:
    image: eclipse-mosquitto
    restart: always
    user: "${DOCKER_USER_ID}:${DOCKER_USER_ID}"
    env_file:
      - ../.env
    volumes:
      - ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ../certs:/certs
    ports:
      - 8883:8883
    networks:
      - lannootree

  lannootree-traefik:
    image: "traefik:v2.9"
    restart: always
    environment:
      - TZ=Europe/Brussels
    ports:
      - "80:80"
      # - "443:443"
      # - "8080:8080"
    volumes:
      - "./traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik-dashboard.rule=Host(`traefik.${APP_WEB_URL}`)'
      - 'traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080'
      - 'traefik.http.routers.traefik-dashboard.entrypoints=web'
      # - 'traefik.http.routers.traefik-dashboard.middlewares=X-set-headers, authelia@docker'
    networks:
      - lannootree
      # - traefik

  authelia:
    image: authelia/authelia
    restart: always
    user: "${DOCKER_USER_ID}:${DOCKER_USER_ID}"
    volumes:
      - ./authelia/config:/config
    env_file:
      - ../.env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`auth.${APP_WEB_URL}`)'
      - 'traefik.http.services.authelia.loadbalancer.server.port=9091'
      - 'traefik.http.routers.authelia.entryPoints=web'
      - 'traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/verify?rd=https%3A%2F%2Fauth.${APP_WEB_URL}%2F'
      - 'traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
      - 'traefik.http.middlewares.X-set-headers.headers.customrequestheaders.X-Forwarded-Proto=https'
    networks:
      - lannootree

  mqtt-api:
    image: eclipse-mosquitto
    restart: always
    user: "${DOCKER_USER_ID}:${DOCKER_USER_ID}"
    environment:
      - TZ=Europe/Brussels
    volumes:
      - ./mqtt/mosquitto-api.conf:/mosquitto/config/mosquitto.conf
    ports:
      - 1883:1883
    networks:
      - lannootree

  nodered:
    image: nodered/node-red:latest
    restart: always
    environment:
      - TZ=Europe/Brussels
    user: "${DOCKER_USER_ID}:${DOCKER_USER_ID}"
    volumes:
      - ./nodered:/data
      - "../certs/ca/ca.crt:/app/ca.crt:ro"
      - "../certs/client:/app/clientcert:ro"  
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.nodered.rule=Host(`${APP_WEB_URL}`) && PathPrefix(`/nodered`)'
      - 'traefik.http.routers.nodered.priority=100'
      - 'traefik.http.services.nodered.loadbalancer.server.port=1880'
      - 'traefik.http.routers.nodered.entrypoints=web'
      # - 'traefik.http.routers.nodered.middlewares=X-set-headers, authelia@docker'
    networks:
      - lannootree

  certificate-api:
    image: "nginx:alpine"
    restart: always
    environment:
      - TZ=Europe/Brussels
    volumes:
      - "../certs/ca/ca.crt:/usr/share/nginx/html/ca.crt:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.certificate-api.rule=Host(`${APP_WEB_URL}`) && PathPrefix(`/ca.crt`)'
      - 'traefik.http.routers.certificate-api.priority=100'
      - 'traefik.http.routers.certificate-api.entrypoints=web'
    networks:
      - lannootree

  whoami:
    image: "traefik/whoami"
    restart: always
    env_file:
      - ../.env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`${APP_WEB_URL}`) && PathPrefix(`/whoami`)'
      - 'traefik.http.routers.whoami.priority=100'
      - 'traefik.http.routers.whoami.entrypoints=web'
      # - 'traefik.http.routers.whoami.middlewares=X-set-headers, authelia@docker'
    networks:
      - lannootree

  frontend:
    build:
      context: ./frontend
      args:
          APP_WEB_URL: ${APP_WEB_URL}
          LOGOUT_URL: "https://auth.${APP_WEB_URL}/logout"
          APP_URL: "wss://${APP_WEB_URL}/wss"
    restart: always
    env_file:
      - ../.env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`${APP_WEB_URL}`)'
      - 'traefik.http.routers.frontend.priority=1'
      - 'traefik.http.routers.frontend.entrypoints=web'
      # - 'traefik.http.routers.frontend.middlewares=X-set-headers, authelia@docker'
    networks:
      - lannootree

  client-api:
    build:
      context: ./client-api
    restart: always
    env_file:
      - ../.env
    volumes:
      - "../certs/ca/ca.crt:/app/ca.crt:ro"
      - "../certs/client/client.crt:/app/client.crt:ro"
      - "../certs/client/client.key:/app/client.key:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client-api.rule=Host(`${APP_WEB_URL}`) && PathPrefix(`/wss`)'
      - "traefik.http.routers.client-api.middlewares=client-api-stripprefix"
      - "traefik.http.middlewares.client-api-stripprefix.stripprefix.prefixes=/wss"
      - 'traefik.http.routers.client-api.priority=100'
      - 'traefik.http.services.client-api.loadbalancer.server.port=3001'
      - 'traefik.http.routers.client-api.entrypoints=web'
      # - 'traefik.http.routers.client-api.middlewares=X-set-headers, authelia@docker'
    networks:
      - lannootree

  admin-api:
    build:
      context: ./admin-api
    restart: always
    env_file:
      - ../.env
    volumes:
      - "../certs/ca/ca.crt:/app/ca.crt:ro"
      - "../certs/client/client.crt:/app/client.crt:ro"
      - "../certs/client/client.key:/app/client.key:ro"
      - "log-database:/app/db"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.admin-api.rule=Host(`${APP_WEB_URL}`) && PathPrefix(`/admin/wss`)'
      - "traefik.http.routers.admin-api.middlewares=admin-api-stripprefix"
      - "traefik.http.middlewares.admin-api-stripprefix.stripprefix.prefixes=/admin/wss"
      - 'traefik.http.routers.admin-api.priority=100'
      - 'traefik.http.services.admin-api.loadbalancer.server.port=3000'
      - 'traefik.http.routers.admin-api.entrypoints=web'
      # - 'traefik.http.routers.admin-api.middlewares=X-set-headers, authelia@docker'
    networks:
      - lannootree

  controller:
    build:
      context: ./controller
    env_file:
      - ../.env
    environment:
      - PRODUCTION_SERVER=true
    restart: always
    volumes:
      - ./config.json:/config.json
      - "../certs/ca/ca.crt:/app/ca.crt:ro"
      - "../certs/client/client.crt:/app/client.crt:ro"
      - "../certs/client/client.key:/app/client.key:ro"
    networks:
      - lannootree

  storage:
    build:
      context: ./storage
    env_file:
      - ../.env
    environment:
      - PRODUCTION_SERVER=true
    restart: always
    volumes:
      - ./config.json:/config.json
      - ./storage/db/:/app/db
      - "../certs/ca/ca.crt:/app/ca.crt:ro"
      - "../certs/client/client.crt:/app/client.crt:ro"
      - "../certs/client/client.key:/app/client.key:ro"
    networks:
      - lannootree

  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: storage
      MYSQL_DATABASE: storage
      TZ: Europe/Brussels
    # ports:
      # - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - lannootree

  phpmyadmin:
    build: ./phpmyadmin
    restart: always
    # ports:
    #   - 8080:80
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: storage
      TZ: Europe/Brussels
    networks:
      - lannootree
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.phpmyadmin.rule=Host(`${APP_WEB_URL}`) && PathPrefix(`/phpmyadmin`)'
      # - "traefik.http.routers.phpmyadmin.middlewares=phpmyadmin-stripprefix"
      # - "traefik.http.middlewares.phpmyadmin-stripprefix.stripprefix.prefixes=/phpmyadmin"
      - 'traefik.http.routers.phpmyadmin.priority=100'
      - 'traefik.http.routers.phpmyadmin.entrypoints=web'
      # - 'traefik.http.routers.phpmyadmin.middlewares=X-set-headers, authelia@docker'

#  githook:
#    restart: unless-stopped    
#    build:
#      context: ./githook/docker-webhook   
#    env_file:
#      - ./githook/githook.env
#    volumes:
#        - ./githook/scripts:/code
#        - ../:/home/ubuntu/Lannootree #Set to directory of repo! also change this in the deploy script
#        - /var/run/docker.sock:/var/run/docker.sock
#    environment:
#      - WEBHOOK_HOOKS_DIR=/code/hooks
#      - WEBHOOK_BRANCH_LIST=main  
#    labels:
#      - 'traefik.enable=true'
#      - 'traefik.http.routers.githook.rule=Host(`githook.${APP_WEB_URL}`)'
#      - 'traefik.http.services.githook.loadbalancer.server.port=8000'
#      - 'traefik.http.routers.githook.entrypoints=web'
#    networks:
#      - lannootree

volumes:
  log-database:
  nodered:
  mysql:

networks:
  lannootree:
    name: lannootree
  # traefik:
  #   external: true

